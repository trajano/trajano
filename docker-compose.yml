#docker stack deploy -c docker-compose.yml --with-registry-auth trajano
version: '3.4'
services:
   # 4/kZkxXSsPXu7XlzItajkniSMhlptkhIjLVKJe7Aj+WjvbS35sdkEzjld8eqpO5c:$apr1$nAlpgWWz$m1r3URBT9dfTWr2sfZ24f.
  # 4/kZkxXSsPXu7XlzItajkniSMhlptkhIjLVKJe7Aj+WjvbS35sdkEzjld8eqpO5c
  # RhN5o7rN/PUiGySg0SBHr1HZaOy5hkG3bKnEeROU7BCmUqRhUwkzA271SK+RTdlb
  registry:
    image: registry:2
    deploy:
      restart_policy:
        condition: any
        delay: 10s
    volumes:
    - registry:/var/lib/registry
  web:
    image: trajano.net/web
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
      placement:
        constraints:
        - node.hostname==docker-engine
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - letsencrypt:/etc/letsencrypt
    environment:
    - TZ=America/Toronto
    - HTTPVAL=true
  wordpress:
    image: trajano.net/blog
    deploy:
      placement:
        constraints:
          - node.role != manager
    networks: 
    - default
    - wordpress
    volumes:
    - wordpress:/var/www/html
  wordpress-php:
    image: trajano.net/blog-fpm
    deploy:
      placement:
        constraints:
          - node.role != manager
    networks: 
    - wordpress
    volumes:
    - wordpress:/var/www/html
  mysql:
    image: mysql:latest
    deploy:
      placement:
        constraints:
          - node.role != manager
    volumes:
    - wordpressdb:/var/lib/mysql:rw
    environment:
    - MYSQL_DATABASE=wordpress
    - MYSQL_USER=wpadmin
    - MYSQL_PASSWORD=SecretAgentMan
    - MYSQL_RANDOM_ROOT_PASSWORD=yes
    networks: 
    - wordpress
#    ports:
#    - "3306:3306"
  portfolio:
    image: trajano.net/portfolio
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 10s
      placement:
        constraints:
        - node.hostname!=docker-engine
    environment:
    - TZ=America/Toronto
  sftpd:
    image: trajano.net/sftpd
    volumes:
    - site:/home/site/s
    ports:
    - "6022:22"
  site:
    image: trajano.net/site
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 10s
      placement:
        constraints:
        - node.hostname!=docker-engine
    volumes:
    - site:/site
  dashboard:
    image: charypar/swarm-dashboard
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
    - 8080:8080
    environment:
      PORT: 8080
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
#  gitlab:
#    image: gitlab/gitlab-ce:latest
#    deploy:
#      restart_policy:
#        condition: any
#        delay: 10s
#      placement:
#        constraints:
#        - node.hostname!=docker-engine
#    volumes:
#    - gitlab-config:/etc/gitlab
#    - gitlab-data:/var/opt/gitlab
volumes:
  site:
  wordpressdb:
    name: 'noriko/s/wpdb'
    driver: cifs
  registry:
    name: 'noriko/s/registry'
    driver: cifs
  www:
    name: 'noriko/s/www'
    driver: cifs
  wordpress:
    name: 'noriko/s/wordpress'
    driver: cifs
#  wordpress_local:
#    driver: local
#    driver_opts:
#      type: cifs
#      o: vers=3.02,credential=/root/sharecreds
#      device: "//192.168.1.86/s/wordpress"
#    name: 'noriko/s/wordpress'
#    driver: cifs
  letsencrypt:
    name: 'noriko/s/letsencrypt'
    driver: cifs
  gitlab-config:
    name: 'noriko/s/gitlab-config'
    driver: cifs
    driver_opts: 
      cifsopts: vers=3.02,mfsymlinks,dynperm
  gitlab-data:
    name: 'noriko/s/gitlab-data'
    driver: cifs
networks:
  wordpress:
