# This stack is used to build up the rest of the other stacks.  It contains the main entry point to access the registry and the
# intranet along with Portainer and the swarm dashboard which does not require any other stacks to be present.
#docker stack deploy -c docker-compose.yml --with-registry-auth trajano
#docker run -v noriko/s/letsencrypt:/etc/letsencrypt --volume-driver cifs trajano.net/web
version: '3.4'
services:
  # 4/kZkxXSsPXu7XlzItajkniSMhlptkhIjLVKJe7Aj+WjvbS35sdkEzjld8eqpO5c:$apr1$nAlpgWWz$m1r3URBT9dfTWr2sfZ24f.
  # 4/kZkxXSsPXu7XlzItajkniSMhlptkhIjLVKJe7Aj+WjvbS35sdkEzjld8eqpO5c
  # RhN5o7rN/PUiGySg0SBHr1HZaOy5hkG3bKnEeROU7BCmUqRhUwkzA271SK+RTdlb
  registry:
    image: registry:2
    deploy:
      restart_policy:
        condition: any
        delay: 10s
      resources:
        limits:
          memory: 64M
      placement:
        constraints:
        - node.hostname==docker-engine
    volumes:
    - registry:/var/lib/registry
  web:
    image: trajano.net/web
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 10s
      resources:
        limits:
          memory: 32M
      placement:
        constraints:
        - node.hostname==docker-engine
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - letsencrypt:/etc/letsencrypt
    environment:
    - TZ=America/Toronto
    - HTTPVAL=true
    networks: 
    - public
    - default
  intranet:
    image: trajano.net/intranet
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 10s
      placement:
        constraints:
          - node.role != manager
    volumes:
    - letsencrypt:/etc/letsencrypt
    environment:
    - TZ=America/Toronto
    - HTTPVAL=true
    networks:
    - default
    - intranet
  dashboard:
    image: charypar/swarm-dashboard
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
    - intranet
    environment:
      PORT: 8080
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    deploy:
      placement:
        constraints:
         - node.role == manager
    networks:
    - intranet
    - default
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - portainer:/data
volumes:
  registry:
    name: 'noriko/s/registry'
    driver: cifs
  letsencrypt:
    name: 'noriko/s/letsencrypt'
    driver: cifs
  portainer:
    name: 'noriko/s/portainer'
    driver: cifs
networks:
  public:
    external:
      name: public
  intranet:
    external:
      name: intranet
