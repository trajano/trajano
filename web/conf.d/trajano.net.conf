server {
	listen 80;
	return 301 https://trajano.net$request_uri;
}
server {
	listen 80;
	server_name trajano.net;
	return 301 https://$host$request_uri;
}
server {
	listen 80;
	server_name www.trajano.net;
	return 301 https://trajano.net$request_uri;
}
server {
    listen 443 ssl http2;
	server_name www.trajano.net;
	return 301 https://trajano.net$request_uri;
}
server {
	server_name trajano.net;
    listen 443 ssl http2;

	location /v2/ {
		if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        	return 404;
	    }
		auth_basic "Registry realm";
      	auth_basic_user_file /etc/nginx/conf.d/nginx.htpasswd;
		add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;
		client_max_body_size 600M;
		resolver 127.0.0.11 valid=30s;
	    set $backend "http://registry:5000";
		proxy_pass                          $backend;
		proxy_set_header  Host              $http_host;   # required for docker client's sake
		proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_read_timeout                  900;
	}

	location / {
		resolver 127.0.0.11 valid=30s;
	    set $backend "http://portfolio";
		proxy_set_header  Host              $http_host;   # required for docker client's sake
		proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
    	proxy_pass $backend;
		proxy_intercept_errors on;
		recursive_error_pages on;
		error_page 404 = @wordpress-proxy;
	}

	location @wordpress-proxy {
		resolver 127.0.0.11 valid=30s;
	    set $backend "http://wordpress";
		proxy_set_header  Host              $http_host;   # required for docker client's sake
		proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
    	proxy_pass $backend;
	}
}