#docker stack deploy -c docker-compose.yml --with-registry-auth trajano
#docker run -v noriko/s/letsencrypt:/etc/letsencrypt --volume-driver cifs trajano.net/web
version: '3.4'
services:
  intranet:
    image: trajano.net/intranet
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 10s
      placement:
        constraints:
          - node.role != manager
    volumes:
    - letsencrypt:/etc/letsencrypt
    environment:
    - TZ=America/Toronto
    - HTTPVAL=true
    networks:
    - public
    - default
    - ci
  dashboard:
    image: charypar/swarm-dashboard
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      PORT: 8080
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
  grafana:
    image: trajano.net/swarmprom-grafana
    networks:
    - mon
    - default
    - db
    - smtp
    - cache
    environment:
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_SERVER_DOMAIN=i.trajano.net
    - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/grafana
    - GF_AUTH_PROXY_ENABLED=true
    - GF_AUTH_PROXY_HEADER_NAME=X-WEBAUTH-USER
    - GF_AUTH_PROXY_HEADER_PROPERTY=username
    - GF_AUTH_PROXY_AUTO_SIGN_UP=true
    - GF_DATABASE_URL=mysql://grafana:r4BTIeqCHEj3ObckcbeO@mysql:3306/grafana
    - GF_SESSION_PROVIDER=redis
    - GF_SESSION_PROVIDER_CONFIG=addr=redis:6379,pool_size=100,prefix=grafana
    - GF_SESSION_COOKIE_SECURE=true
    - GF_SMTP_ENABLED=true
    - GF_SMTP_HOST=smtp
    - GF_SMTP_FROM_ADDRESS=grafana@trajano.net
    #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
    #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
    #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
    #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
    #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
    #- GF_SMTP_USER=${GF_SMTP_USER}
    #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
    - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
         - node.role != manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    deploy:
      placement:
        constraints:
         - node.role == manager
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - portainer:/data
volumes:
  grafana:
    name: 'noriko/s/grafana'
    driver: cifs
    driver_opts:
      cifsopts: vers=3.02,mfsymlinks,file_mode=0666,dir_mode=0777
  portainer:
    name: 'noriko/s/portainer'
    driver: cifs
    driver_opts:
      cifsopts: vers=3.02,mfsymlinks,file_mode=0666,dir_mode=0777
  letsencrypt:
    name: 'noriko/s/letsencrypt'
    driver: cifs
    driver_opts:
      cifsopts: vers=3.02,mfsymlinks,file_mode=0666,dir_mode=0777
networks:
  ci:
    external:
      name: ci_default
  mon:
    external:
      name: mon_default
  smtp:
    external:
      name: smtp_default
  db:
    external:
      name: db_default
  cache:
    external:
      name: cache_default
  public:
    external:
      name: public
